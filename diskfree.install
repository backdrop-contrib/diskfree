<?php

/**
 * @file
 * Install, update and uninstall functions for the diskfree module.
 *
 * @ingroup diskfree
 */

/**
 * Implements hook_requirements().
 */
function diskfree_requirements($phase) {
  $requirements = array();
  $t = get_t();
/*
  if (!file_exists(variable_get('diskfree_df_path', '/bin/df'))) {
    $missing_utilities[] = 'df';
  }

  if (!file_exists(variable_get('diskfree_grep_path', '/bin/grep'))) {
    $missing_utilities[] = 'grep';
  }

  if (!file_exists(variable_get('diskfree_awk_path', '/usr/bin/awk'))) {
    $missing_utilities[] = 'awk';
  }

  if (!empty($missing_utilities)) {
    $requirements['diskfree_df'] = array(
      'title' => $t('Diskfree utilities'),
      'value' => $t('Various GNU utilies are needed to report the amount of disk space available on the file system, but one or more could not be found.'),
      'severity' => REQUIREMENT_ERROR,
      'description' => theme('item_list', array('items' => $missing_utilities)),
    );
  }
*/
  if ($phase == 'runtime') {
    // available disk space by partition
    $disk_report = diskfree_check_space();
    for ($i = 0, $j = sizeof($disk_report); $i < $j; $i++) {
      
      $requirements["diskfree_report_$i"] = array(
        'title' => $t('Usage on @partition', array('@partition' => $disk_report[$i][2])),
        'value' => $t('@used in-use; @free free', array('@used' => $disk_report[$i][1], '@free' => $disk_report[$i][0])),
        'severity' => _diskfree_over_threshold($disk_report[$i][1]) ? REQUIREMENT_WARNING : REQUIREMENT_OK,
      );
    }
  }

  return $requirements;
}

function diskfree_uninstall() {
  variable_del('diskfree_df_path');
  variable_del('diskfree_grep_path');
  variable_del('diskfree_awk_path');
  variable_del('diskfree_alert_threshold');
  variable_del('diskfree_alert_email');
}
